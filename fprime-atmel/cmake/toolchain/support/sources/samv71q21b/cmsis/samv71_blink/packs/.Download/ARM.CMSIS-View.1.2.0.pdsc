<?xml version="1.0" encoding="UTF-8"?>
<package schemaVersion="1.7.36" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Open-CMSIS-Pack/Open-CMSIS-Pack-Spec/v1.7.36/schema/PACK.xsd">
  <vendor>ARM</vendor>
  <name>CMSIS-View</name>
  <description>Debugger visualization of software events and statistics</description>
  <url>https://www.keil.com/pack/</url>
  <license>LICENSE</license>
  <licenseSets>
    <licenseSet id="all" default="true" gating="true">
      <license name="LICENSE" title="Apache 2.0 open-source license" spdx="Apache-2.0"/>
    </licenseSet>
  </licenseSets>
  <repository type="git">https:/github.com/arm-software/CMSIS-View.git</repository>

  <releases>
    <release version="1.2.0" date="2024-05-16" tag="pack/1.2.0">
      - Event Recorder: 1.6.0
        - Add support for Cortex-M52
      - Fault component: 1.1.0
        - Add support for Cortex-M52
    </release>
    <release version="1.2.0-rc0" date="2024-05-13" tag="pack/1.2.0-rc0">
      - Add support for Cortex-M52
      - Add support for Cortex-M52
    </release>
    <release version="1.1.0" date="2023-12-19" tag="pack/1.1.0">
      - Event Recorder
        - Add support for CMSIS v6
        - Update conditions to prevent simultaneous selection of CMSIS-View:Event Recorder and Compiler:Event Recorder components
        - Update Event Statistic example to support CMSIS-Toolbox v2
      - Fault component
        - Extend section name for fault information, for easier absolute addressing via the linker script
        - Update Fault example for Cortex-M33 (B-U585I-IOT02A) with improved GCC support and add support for building with CMSIS-Toolbox v2
        - Update Fault example for AVH Cortex-M7 to support CMSIS-Toolbox v2
    </release>
    <release version="1.0.0" date="2023-06-05" tag="pack/1.0.0">
      Initial release of EventRecorder and Fault components as replacement for Keil.ARM-Compiler pack.
      - Rename component class to CMSIS-View. For migration, deselect old "Compiler::EventRecorder" component and select new "CMSIS-View::EventRecorder" one.
      - Fixes/additions for IAR Compiler
      - Enhacements for documentation
      - Optimize Record Lock/Unlock in Event Recorder (using C11 atomics except for Cortex-M0)
      - Correct timestamp overflow handling in Event Recorder
      - Add "CMSIS-View::Fault" component for recording system faults.
    </release>
  </releases>

  <taxonomy>
    <description Cclass="CMSIS-View" doc="Documentation/html/index.html">Debugger visualization of software events and statistics</description>
  </taxonomy>

  <conditions>
    <condition id="Cortex-M Device">
      <description>Cortex-M processor based device: Cortex-M0/M0+/M1/M3/M4/M7/M23/M33/M35P/M55/M85, ARMV8MBL/ML, Star-MC1, SC000/300</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="Cortex-M1"/>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="Cortex-M4"/>
      <accept Dcore="Cortex-M7"/>
      <accept Dcore="Cortex-M23"/>
      <accept Dcore="Cortex-M33"/>
      <accept Dcore="Cortex-M35P"/>
      <accept Dcore="Cortex-M52"/>
      <accept Dcore="Cortex-M55"/>
      <accept Dcore="Cortex-M85"/>
      <accept Dcore="ARMV8MBL"/>
      <accept Dcore="ARMV8MML"/>
      <accept Dcore="ARMV81MML"/>
      <accept Dcore="Star-MC1"/>
      <accept Dcore="SC000"/>
      <accept Dcore="SC300"/>
    </condition>
    <condition id="EventRecorder">
      <description>Conditions for Event Recorder</description>
      <require condition="Cortex-M Device"/>
      <require Cclass="CMSIS"      Cgroup="CORE"/>
      <deny    Cclass="Compiler"   Cgroup="Event Recorder"/>
    </condition>
    <condition id="FaultRecord">
      <description>Conditions for Fault Record</description>
      <require condition="Cortex-M Device"/>
      <require Cclass="CMSIS"      Cgroup="CORE"/>
      <require Cclass="CMSIS-View" Cgroup="Fault" Csub="Storage"/>
      <require Cclass="CMSIS-View" Cgroup="Event Recorder"/>
    </condition>
  </conditions>

  <components>
    <component Cclass="CMSIS-View" Cgroup="Event Recorder" Cvariant="DAP" Cversion="1.6.0" condition="EventRecorder">
      <description>Event Recording via Debug Access Port (DAP)</description>
      <RTE_Components_h>
        #define RTE_CMSIS_View_EventRecorder
        #define RTE_CMSIS_View_EventRecorder_DAP
      </RTE_Components_h>
      <files>
        <file category="header" name="EventRecorder/Config/EventRecorderConf.h" attr="config" version="1.1.0"/>
        <file category="header" name="EventRecorder/Include/EventRecorder.h"/>
        <file category="source" name="EventRecorder/Source/EventRecorder.c"/>
        <file category="doc"    name="Documentation/html/evr.html"/>
        <file category="other"  name="EventRecorder/EventRecorder.scvd"/>
      </files>
    </component>
    <component Cclass="CMSIS-View" Cgroup="Event Recorder" Cvariant="Semihosting" Cversion="1.6.0" condition="EventRecorder">
      <description>Event Recording via Debug Access Port (DAP) and Semihosting</description>
      <RTE_Components_h>
        #define RTE_CMSIS_View_EventRecorder
        #define RTE_CMSIS_View_EventRecorder_DAP
        #define RTE_CMSIS_View_EventRecorder_Semihosting
      </RTE_Components_h>
      <files>
        <file category="header" name="EventRecorder/Config/EventRecorderConf.h" attr="config" version="1.1.0"/>
        <file category="header" name="EventRecorder/Include/EventRecorder.h"/>
        <file category="source" name="EventRecorder/Source/EventRecorder.c"/>
        <file category="doc"    name="Documentation/html/evr.html"/>
        <file category="other"  name="EventRecorder/EventRecorder.scvd"/>
      </files>
    </component>
    <component Cclass="CMSIS-View" Cgroup="Fault" Csub="Storage" Cversion="1.1.0" condition="Cortex-M Device">
      <description>Fault Storage</description>
      <RTE_Components_h>
        #define RTE_CMSIS_View_Fault_Storage
      </RTE_Components_h>
      <files>
        <file category="header" name="Fault/Include/ARM_Fault.h"/>
        <file category="source" name="Fault/Source/ARM_FaultStorage.c"/>
        <file category="source" name="Fault/Template/ARM_FaultPrint.c" version="1.0.1" attr="template" select="Output decoded fault information via STDIO"/>
        <file category="doc"    name="Documentation/html/fault.html"/>
        <file category="other"  name="Fault/ARM_Fault.scvd"/>
      </files>
    </component>
    <component Cclass="CMSIS-View" Cgroup="Fault" Csub="Record" Cversion="1.1.0" condition="FaultRecord">
      <description>Fault Record (Output decoded fault information via EventRecorder)</description>
      <RTE_Components_h>
        #define RTE_CMSIS_View_Fault_Record
      </RTE_Components_h>
      <files>
        <file category="header" name="Fault/Include/ARM_Fault.h"/>
        <file category="source" name="Fault/Source/ARM_FaultRecord.c"/>
        <file category="doc"    name="Documentation/html/fault.html"/>
        <file category="other"  name="Fault/ARM_Fault.scvd"/>
      </files>
    </component>
  </components>

  <examples>
    <example name="Event Statistic example" folder="Examples/EventStatistic" doc="README.md">
      <description>Example that shows the usage of start/stop events for statistical code profiling with the Event Statistics window.</description>
      <board name="V2M-MPS3-SSE-300-FVP" vendor="ARM"/>
      <project>
        <environment name="csolution" load="EventStatistic.csolution.yml"/>
      </project>
    </example>
    <example name="Fault example" folder="Examples/Fault/B-U585I-IOT02A" doc="README.md">
      <description>Example that shows the usage of Fault component on an Cortex-M33 with TrustZone.</description>
      <board name="B-U585I-IOT02A" vendor="STMicroelectronics"/>
      <project>
        <environment name="csolution" load="Fault.csolution.yml"/>
      </project>
    </example>
  </examples>

</package>
